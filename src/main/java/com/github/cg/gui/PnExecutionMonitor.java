/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.github.cg.gui;

import com.github.cg.gui.util.EntityColumnWidthTableModel;
import com.github.cg.model.Target;
import com.github.cg.model.TargetStatus;
import com.github.cg.vo.ColumnMetadata;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 *
 * @author pablo-moreira
 */
public class PnExecutionMonitor extends javax.swing.JPanel {
	
	public static final ColumnMetadata COL_STATUS = new ColumnMetadata(0, "Situação",	80);
	public static final ColumnMetadata COL_ENTITY = new ColumnMetadata(1, "Entidade",	300);
	public static final ColumnMetadata COL_TARGET = new ColumnMetadata(2, "Target",		300);
	
	private List<TargetStatus> targetsStatus = new ArrayList<TargetStatus>();
	private final EntityColumnWidthTableModel<TargetStatus> tmTargetsStatus;
	
	/**
	 * Creates new form PnLogExecution
	 */
	public PnExecutionMonitor() {
		
		initComponents();
		
		tmTargetsStatus = new EntityColumnWidthTableModel<TargetStatus>(tblTargetsStatus) {
			
			@Override
			public List<ColumnMetadata> getColumnsMetadata() {			
				return Arrays.asList(new ColumnMetadata[] {
					COL_STATUS,
					COL_ENTITY,
					COL_TARGET
				});
			}

			@Override
			public List<TargetStatus> getEntities() {
				return targetsStatus;
			}

			@Override
			public Object getValueAt(TargetStatus entidade, int columnIndex) {
				switch (columnIndex) {
					case 0 :
						return entidade.isExecuted() ? "OK" : "-";
					case 1 :
						return entidade.getEntityClass().getName();					
					case 2 :
						return entidade.getTarget().getDescription();
					default :
						return null;
				}
			}			
		};
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblTargetsStatus = new javax.swing.JTable();

        jScrollPane1.setAutoscrolls(true);

        tblTargetsStatus.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        tblTargetsStatus.setRowSelectionAllowed(false);
        jScrollPane1.setViewportView(tblTargetsStatus);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTargetsStatus;
    // End of variables declaration//GEN-END:variables
	
	public void initialize(List<TargetStatus> targetsStatus) {
	
		this.targetsStatus = targetsStatus;
		
		refreshTable();
	}

	public void refreshTable() {
		tmTargetsStatus.fireTableDataChanged();
	}
}