Roadmap
 [x] Adicionar o campo plural para o formulario da entidade
 [x] Criar o formulario para escolher as entidades e os targets que serao executados
 [x] Refatorar o formulario DlgFrmEntity para definir o atributo descricao da entidade
 [x] Retirar qualquer dependencia do atos do projeto
 [ ] Criar um parametro de configuracao no cg.properties para definir o caminho para o arquivo messages.properties
 [ ] Refatoracao retirar a responsabilidade de gravrar os arquivos messages.properties e cg.properties do CodeGenerator e passar para um manager
 [x] Criar mecanismo de definir required configs no arquivo cg.properties, para o core e os plugins
 [x] Adicionar um combo para definir a mascara de um atributo String.
 [x] Criar um mecanismo de customizar as opcoes do combo mascara
 [ ] Implementar i18n nos formularios 
 [ ] Implementar i18n nas mensagens de erros
 [x] Apos a execucao da task FrmEntityTask nao esta sendo gravado os dados preenchidos

Extraido do CodeGenerator.constructor()
		
		/* TODO - Refatorar colocar esta validacao no momento que o usuario selecionar esta entidade para gerar o codigo */ 
//		try {
//			entity.getAttributeId().getType().getSimpleName();			
//		}
//		catch (Exception e) {
//			throw new Exception("Erro ao obter o atributo 'entityIdClass' da classe " + getEntity().getClassSimpleName());
//		}
 


Para o desenvolvimento de um novo plugin utilize: 

		CodeGenerator codeGenerator = new CodeGenerator();
		
		codeGenerator.executeTargetByName("Manager.xhtml", Car.class);
		
Para não precisar escolher uma entidade e um target pela interface gráfica.		
		
 